@page "/admin/experience/edit"
@page "/admin/experience/edit/{Id}"
@using Portfolio.Model.Data;
@using Portfolio.Model;
@using Portfolio.Model.Data.Interface;
@inject NavigationManager _manager;
@inject IPortfolioApi _api;
@using Markdig;

<main class="page">
    <div id="Admin-Panner-Header" class="important-text d-flex justify-content-between align-items-center">
        <div id="Admin-Panel-Title">
            Portfolio Admin
        </div>
        <div>
            <a href="" class="Admin-Action-Button">
                Voir le site
            </a>
            &nbsp;/&nbsp;
            <a class="Admin-Action-Button">
                Déconnexion
            </a>
        </div>
    </div>
    <div id="Admin-Panel-Page" class="row">
        <div class="col-2 box" id="Admin-Panel-NavBar">
            <div>
                <a href="admin" class="Admin-Nav-Link">
                    <Icon Name="IconName.Speedometer2" Size="IconSize.x5" Class="important-text"/> &nbsp; Dashboard
                </a>
            </div>
            <div>
                <a href="admin/projects" class="Admin-Nav-Link">
                    <Icon Name="IconName.JournalCode" Size="IconSize.x5" Class="important-text"/> &nbsp; Projets
                </a>
            </div>
            <div>
                <a href="admin/experience" class="Admin-Nav-Link  Admin-Nav-Active">
                    <Icon Name="IconName.Briefcase" Size="IconSize.x5" Class="important-text"/> &nbsp; Expériences
                </a>
            </div>
            <div>
                <a href="admin/education" class="Admin-Nav-Link">
                    <Icon Name="IconName.Mortarboard" Size="IconSize.x5" Class="important-text"/> &nbsp; Formations
                </a>
            </div>
        </div>
        <div class="col-5 box" id="Admin-Panel-Content">
            <EditForm Model="experience" OnValidSubmit="SavePost">
                <DataAnnotationsValidator />
                <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider" />
                <PortfolioNavigationLock @ref="NavigationLock"/>

                <InputTextAreaOnInput @bind-Value="experience.Title" @onkeyup="UpdateTitle" placeholder="Titre" type="text" class="admin-form-input"/>
                <ValidationMessage For="()=>experience.Title" />

                <InputTextAreaOnInput @bind-Value="experience.Date" @onkeyup="UpdateDate" placeholder="Date" type="text" class="admin-form-input"/>
                <ValidationMessage For="()=>experience.Date" />
                
                <InputTextAreaOnInput @bind-Value="experience.Location"@onkeyup="UpdateLocation" placeholder="Entreprise" type="text" class="admin-form-input"/>
                <ValidationMessage For="()=>experience.Location" />

                <InputTextAreaOnInput @bind-Value="experience.Text" @onkeyup="UpdateDescription" placeholder="Description" type="text" class="admin-form-text-area"/>
                <ValidationMessage For="()=>experience.Text" />

                <button class="button-theme fs-6 important-text" style="width:7rem; height:2rem;" type="submit">
                    Enregistrer
                </button>
            </EditForm>
        </div>

        <div class="col-4 box Timeline-Demo">
            <div class="d-flex flex-column flex-sm-row timeline-container">
                <div class="d-flex flex-sm-column timeline-informations justify-content-between justify-content-sm-start">
                    <span class="important-text">@location</span>
                    <span class="colored-text">@date</span>
                </div>

                <div class="d-flex flex-column timeline-description">
                    <span class="important-text timeline-description-title">@title</span>
                    <div class="timeline-description-text">@((MarkupString)text)</div>
                </div>
            </div>
        </div>
    </div>
</main>

@code{
    [Parameter]
    public string? Id { get; set; } = null;

    private Experience experience = new Experience();
    MarkdownPipeline pipeline = new MarkdownPipelineBuilder().UseEmojiAndSmiley().Build();
    PortfolioNavigationLock? NavigationLock { get; set; }

    private string text = "Description";
    private string title = "Titre";
    private string date = "Date";
    private string location = "Entreprise";

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            experience = await _api.GetExperienceAsync(Id);
            if (experience == null)
            {
                _manager.NavigateTo("admin/experience");
                experience = new Experience();
            }
            UpdateDescription();
            UpdateTitle();
            UpdateDate();
            UpdateLocation();
        }
    }

    protected void UpdateDescription()
    {
        if(experience.Text != null && experience.Text != ""){
            text = Markdig.Markdown.ToHtml(experience.Text, pipeline);
        }
        else{
            text = "Description";
        }
    }

    protected void UpdateTitle()
    {
        if(experience.Title != null && experience.Title != ""){
            title = experience.Title;
        }
        else{
            text = "Titre";
        }
    }

    protected void UpdateDate()
    {
        if(experience.Date != null && experience.Date != ""){
            date = experience.Date;
        }
        else{
            date = "Date";
        }
    }

    protected void UpdateLocation()
    {
        if(experience.Location != null && experience.Location != ""){
            location = experience.Location;
        }
        else{
            location = "Entreprise";
        }
    }

    private async Task SavePost()
    {
        NavigationLock?.CurrentEditContext.MarkAsUnmodified();
        await _api.SaveExperienceAsync(experience);
        _manager.NavigateTo("admin/experience");
    }
}